flowchart TD
    A["Input Image (H x W x 3)"] --> B["Pad to (H', W') if needed\n(divisible by 8)"]
    B --> C["To Tensor & Normalize"]
    C --> D["Encoder (FullyConvolutionalAE)"]
    D --> E["Latent Representation (B, latent_channels, H/8, W/8)"]
    E --> F["Decoder (FullyConvolutionalAE)"]
    F --> G["Reconstructed Image (H', W', 3)"]
    G --> H["Crop to Original Size (H x W)"]
    H --> I["Output Image"]

    subgraph Encoder
        D1["Conv2d 3→32, 4x4, stride 2"]
        D2["ReLU"]
        D3["Conv2d 32→64, 4x4, stride 2"]
        D4["ReLU"]
        D5["Conv2d 64→128, 4x4, stride 2"]
        D6["ReLU"]
        D7["Conv2d 128→latent_channels, 3x3, stride 1"]
        D8["ReLU"]
        D1 --> D2 --> D3 --> D4 --> D5 --> D6 --> D7 --> D8
        D8 --> E
    end

    subgraph Decoder
        F1["ConvTranspose2d latent_channels→128, 3x3, stride 1"]
        F2["ReLU"]
        F3["ConvTranspose2d 128→64, 4x4, stride 2"]
        F4["ReLU"]
        F5["ConvTranspose2d 64→32, 4x4, stride 2"]
        F6["ReLU"]
        F7["ConvTranspose2d 32→3, 4x4, stride 2"]
        F8["Sigmoid"]
        E --> F1 --> F2 --> F3 --> F4 --> F5 --> F6 --> F7 --> F8 --> G
    end